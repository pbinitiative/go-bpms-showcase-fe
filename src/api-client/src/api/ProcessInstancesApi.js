/**
 * BPMN Engine OpenAPI
 * REST API for lib-bpmn-engine
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import ActivityPage from '../model/ActivityPage';
import CreateProcessInstanceRequest from '../model/CreateProcessInstanceRequest';
import GetProcessInstances200Response from '../model/GetProcessInstances200Response';
import JobPage from '../model/JobPage';
import ProcessInstance from '../model/ProcessInstance';

/**
* ProcessInstances service.
* @module api/ProcessInstancesApi
* @version 0.1.0
*/
export default class ProcessInstancesApi {

    /**
    * Constructs a new ProcessInstancesApi. 
    * @alias module:api/ProcessInstancesApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the createProcessInstance operation.
     * @callback module:api/ProcessInstancesApi~createProcessInstanceCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ProcessInstance} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Create a new process instance
     * @param {module:model/CreateProcessInstanceRequest} createProcessInstanceRequest 
     * @param {module:api/ProcessInstancesApi~createProcessInstanceCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ProcessInstance}
     */
    createProcessInstance(createProcessInstanceRequest, callback) {
      let postBody = createProcessInstanceRequest;
      // verify the required parameter 'createProcessInstanceRequest' is set
      if (createProcessInstanceRequest === undefined || createProcessInstanceRequest === null) {
        throw new Error("Missing the required parameter 'createProcessInstanceRequest' when calling createProcessInstance");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = ProcessInstance;
      return this.apiClient.callApi(
        '/process-instances', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the getActivities operation.
     * @callback module:api/ProcessInstancesApi~getActivitiesCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ActivityPage} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get list of activities for a process instance
     * @param {Number} processInstanceKey 
     * @param {module:api/ProcessInstancesApi~getActivitiesCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ActivityPage}
     */
    getActivities(processInstanceKey, callback) {
      let postBody = null;
      // verify the required parameter 'processInstanceKey' is set
      if (processInstanceKey === undefined || processInstanceKey === null) {
        throw new Error("Missing the required parameter 'processInstanceKey' when calling getActivities");
      }

      let pathParams = {
        'processInstanceKey': processInstanceKey
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = ActivityPage;
      return this.apiClient.callApi(
        '/process-instances/{processInstanceKey}/activities', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the getJobs operation.
     * @callback module:api/ProcessInstancesApi~getJobsCallback
     * @param {String} error Error message, if any.
     * @param {module:model/JobPage} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get list of jobs for a process instance
     * @param {Number} processInstanceKey 
     * @param {module:api/ProcessInstancesApi~getJobsCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/JobPage}
     */
    getJobs(processInstanceKey, callback) {
      let postBody = null;
      // verify the required parameter 'processInstanceKey' is set
      if (processInstanceKey === undefined || processInstanceKey === null) {
        throw new Error("Missing the required parameter 'processInstanceKey' when calling getJobs");
      }

      let pathParams = {
        'processInstanceKey': processInstanceKey
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = JobPage;
      return this.apiClient.callApi(
        '/process-instances/{processInstanceKey}/jobs', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the getProcessInstance operation.
     * @callback module:api/ProcessInstancesApi~getProcessInstanceCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ProcessInstance} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get state of a process instance selected by processInstanceId
     * @param {Number} processInstanceKey 
     * @param {module:api/ProcessInstancesApi~getProcessInstanceCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ProcessInstance}
     */
    getProcessInstance(processInstanceKey, callback) {
      let postBody = null;
      // verify the required parameter 'processInstanceKey' is set
      if (processInstanceKey === undefined || processInstanceKey === null) {
        throw new Error("Missing the required parameter 'processInstanceKey' when calling getProcessInstance");
      }

      let pathParams = {
        'processInstanceKey': processInstanceKey
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = ProcessInstance;
      return this.apiClient.callApi(
        '/process-instances/{processInstanceKey}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the getProcessInstances operation.
     * @callback module:api/ProcessInstancesApi~getProcessInstancesCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GetProcessInstances200Response} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get list of running process instances
     * @param {Object} opts Optional parameters
     * @param {Number} [processDefinitionKey] 
     * @param {Number} [offset = 0)] 
     * @param {Number} [size = 10)] 
     * @param {module:api/ProcessInstancesApi~getProcessInstancesCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GetProcessInstances200Response}
     */
    getProcessInstances(opts, callback) {
      opts = opts || {};
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
        'processDefinitionKey': opts['processDefinitionKey'],
        'offset': opts['offset'],
        'size': opts['size']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = GetProcessInstances200Response;
      return this.apiClient.callApi(
        '/process-instances/', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
