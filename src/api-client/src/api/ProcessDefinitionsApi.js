/**
 * BPMN Engine OpenAPI
 * REST API for lib-bpmn-engine
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import CreateProcessDefinition200Response from '../model/CreateProcessDefinition200Response';
import ProcessDefinitionDetail from '../model/ProcessDefinitionDetail';
import ProcessDefinitionsPage from '../model/ProcessDefinitionsPage';

/**
* ProcessDefinitions service.
* @module api/ProcessDefinitionsApi
* @version 0.1.0
*/
export default class ProcessDefinitionsApi {

    /**
    * Constructs a new ProcessDefinitionsApi. 
    * @alias module:api/ProcessDefinitionsApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the createProcessDefinition operation.
     * @callback module:api/ProcessDefinitionsApi~createProcessDefinitionCallback
     * @param {String} error Error message, if any.
     * @param {module:model/CreateProcessDefinition200Response} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Deploy a new process definition
     * @param {String} body 
     * @param {module:api/ProcessDefinitionsApi~createProcessDefinitionCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/CreateProcessDefinition200Response}
     */
    createProcessDefinition(body, callback) {
      let postBody = body;
      // verify the required parameter 'body' is set
      if (body === undefined || body === null) {
        throw new Error("Missing the required parameter 'body' when calling createProcessDefinition");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = ['application/xml'];
      let accepts = ['application/json'];
      let returnType = CreateProcessDefinition200Response;
      return this.apiClient.callApi(
        '/process-definitions', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the getProcessDefinition operation.
     * @callback module:api/ProcessDefinitionsApi~getProcessDefinitionCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ProcessDefinitionDetail} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get process definition
     * @param {Number} processDefinitionKey 
     * @param {module:api/ProcessDefinitionsApi~getProcessDefinitionCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ProcessDefinitionDetail}
     */
    getProcessDefinition(processDefinitionKey, callback) {
      let postBody = null;
      // verify the required parameter 'processDefinitionKey' is set
      if (processDefinitionKey === undefined || processDefinitionKey === null) {
        throw new Error("Missing the required parameter 'processDefinitionKey' when calling getProcessDefinition");
      }

      let pathParams = {
        'processDefinitionKey': processDefinitionKey
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = ProcessDefinitionDetail;
      return this.apiClient.callApi(
        '/process-definitions/{processDefinitionKey}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the getProcessDefinitions operation.
     * @callback module:api/ProcessDefinitionsApi~getProcessDefinitionsCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ProcessDefinitionsPage} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get list of process definitions
     * @param {module:api/ProcessDefinitionsApi~getProcessDefinitionsCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ProcessDefinitionsPage}
     */
    getProcessDefinitions(callback) {
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = ProcessDefinitionsPage;
      return this.apiClient.callApi(
        '/process-definitions', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
